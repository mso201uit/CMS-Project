// <auto-generated />
using System;
using CMS_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS_Project.Migrations
{
    [DbContext(typeof(CMSContext))]
    [Migration("20241105210527_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS_Project.Models.ContentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Text"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Url"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Picture"
                        });
                });

            modelBuilder.Entity("CMS_Project.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FolderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("FolderId");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is a Test Text.",
                            ContentTypeId = 1,
                            Created = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FolderId = 4,
                            Title = "Test Text",
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Content = "https://uit.instructure.com",
                            ContentTypeId = 2,
                            Created = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FolderId = 3,
                            Title = "Test Url",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("CMS_Project.Models.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bjørn",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Media",
                            ParentId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Said",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Morten",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CMS_Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@test.com",
                            Password = "test123",
                            Username = "Bjørn"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@test.com",
                            Password = "test123",
                            Username = "Said"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@test.com",
                            Password = "test123",
                            Username = "Morten"
                        });
                });

            modelBuilder.Entity("CMS_Project.Models.Document", b =>
                {
                    b.HasOne("CMS_Project.Models.ContentType", "ContentType")
                        .WithMany("Documents")
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMS_Project.Models.Folder", "Folder")
                        .WithMany("Documents")
                        .HasForeignKey("FolderId");

                    b.HasOne("CMS_Project.Models.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentType");

                    b.Navigation("Folder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS_Project.Models.Folder", b =>
                {
                    b.HasOne("CMS_Project.Models.Folder", "Parent")
                        .WithMany("subFolders")
                        .HasForeignKey("ParentId");

                    b.HasOne("CMS_Project.Models.User", "User")
                        .WithMany("Folders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CMS_Project.Models.ContentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("CMS_Project.Models.Folder", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("subFolders");
                });

            modelBuilder.Entity("CMS_Project.Models.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
